{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irisvillageroverride.json",
    "anyOf": [
        {
            "description": "Override cartographer map trades with others or disable the trade altogether",
            "type": "object",
            "properties": {
                "disableTrade": {
                    "type": "boolean",
                    "description": "disableTrade\nDisable the trade altogether.\nIf a cartographer villager gets a new explorer map trade:\nIf this is enabled -> the trade is removed\nIf this is disabled -> the trade is replaced with the \"override\" setting below\nDefault is true, so if you omit this, trades will be removed.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisvillagertrade"},
                    "description": "items\nThe items to override the cartographer trade with.\nBy default, this is:\n    3 emeralds + 3 glass blocks -> 1 spyglass.\n    Can trade 3 to 5 times\n   \nList of VillagerTrades (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                }
            }
        },
        {"type": "string"}
    ],
    "definitions": {
        "obj-byte": {
            "description": "",
            "type": "object",
            "properties": {}
        },
        "obj-com-volmit-iris-engine-object-irisvillagertrade": {"anyOf": [
            {
                "description": "Represents a villager trade.",
                "type": "object",
                "properties": {
                    "ingredient1": {
                        "type": "object",
                        "$ref": "#/definitions/obj-org-bukkit-inventory-itemstack",
                        "description": "ingredient1\nThe first, required, ingredient for the trade.\nNote: this MUST be an item, and may not be a non-obtainable block!\n   \nItemStack (Object)\n"
                    },
                    "ingredient2": {
                        "type": "object",
                        "$ref": "#/definitions/obj-org-bukkit-inventory-itemstack",
                        "description": "ingredient2\nThe second, optional, ingredient for the trade.\nNote: this MUST be an item, and may not be a non-obtainable block!\n   \nItemStack (Object)\n"
                    },
                    "result": {
                        "type": "object",
                        "$ref": "#/definitions/obj-org-bukkit-inventory-itemstack",
                        "description": "result\nThe result of the trade.\nNote: this MUST be an item, and may not be a non-obtainable block!\n   \nItemStack (Object)\n"
                    },
                    "minTrades": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 64,
                        "description": "minTrades\nThe min amount of times this trade can be done. Default 3\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 64"
                    },
                    "maxTrades": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 64,
                        "description": "maxTrades\nThe max amount of times this trade can be done. Default 5\n   \nInteger\n\n    \n* Default Value is 5\n* Minimum allowed is 1\n* Maximum allowed is 64"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-org-bukkit-material-materialdata": {
            "description": "",
            "type": "object",
            "properties": {"data": {
                "type": "object",
                "$ref": "#/definitions/obj-byte",
                "description": "data\nBukkit package classes and enums have no descriptions\n   \nbyte (Object)\n"
            }}
        },
        "obj-org-bukkit-inventory-itemstack": {
            "description": "",
            "type": "object",
            "properties": {
                "craftDelegate": {
                    "type": "object",
                    "$ref": "#/definitions/obj-org-bukkit-inventory-itemstack",
                    "description": "craftDelegate\nBukkit package classes and enums have no descriptions\n   \nItemStack (Object)\n"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/obj-org-bukkit-material-materialdata",
                    "description": "data\nBukkit package classes and enums have no descriptions\n   \nMaterialData (Object)\n"
                }
            }
        }
    }
}
